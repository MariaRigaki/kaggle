!obj:pylearn2.train.Train {
     dataset: &train !obj:utils.load_data {
        start: 100000,
        stop: 250000
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [ !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h0',
                     dim: 50,
                     sparse_init: 10
                 }, !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h1',
                     dim: 50,
                     sparse_init: 10
                 }, !obj:pylearn2.models.mlp.RectifiedLinear {
                     layer_name: 'h2',
                     dim: 50,
                     sparse_init: 10
                 }, !obj:pylearn2.models.mlp.Softmax {
                     layer_name: 'y',
                     n_classes: 2,
                     irange: 0.
                 }
                ],
        nvis: 30,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100,
        learning_rate: .0001,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:utils.load_data {
                              start: 0,
                              stop: 50000
                          },
                'test' : !obj:utils.load_data {
                              start: 50001,
                              stop: 100000
                          },
            },
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: .9
        },
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: 800
                }
            ]
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'test_y_misclass',
             save_path: "mlp_clean_data6.pkl"
        }, !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: .99
        }
    ]
}
